Build Error
Failed to compile

Next.js (14.2.16) is outdated (learn more)
./components/community/user-card.tsx
Error: 
  × the name `Card` is defined multiple times
    ╭─[/home/runner/workspace/components/community/user-card.tsx:1:1]
  1 │ "use client"
  2 │ 
  3 │ import { Card, CardContent, CardFooter } from "@/components/ui/card"
    ·          ──┬─
    ·            ╰── previous definition of `Card` here
  4 │ import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
  5 │ import { Badge } from "@/components/ui/badge"
  6 │ import { Button } from "@/components/ui/button"
  7 │ import { MessageCircle, UserPlus } from "lucide-react"
  8 │ 
  9 │ type UserData = {
 10 │   uid: string
 11 │   displayName: string
 12 │   photoURL: string
 13 │   nativeLanguage: string
 14 │   learningLanguage: string
 15 │   interests: string[]
 16 │   bio: string
 17 │ }
 18 │ 
 19 │ interface UserCardProps {
 20 │   user: UserData
 21 │   onStartConversation: () => void
 22 │ }
 23 │ 
 24 │ export function UserCard({ user, onStartConversation }: UserCardProps) {
 25 │   return (
 26 │     <Card className="overflow-hidden transition-all hover:shadow-md">
 27 │       <div className="h-24 bg-gradient-to-r from-primary to-purple-400"></div>
 28 │       <CardContent className="p-6 pt-0 -mt-12">
 29 │         <Avatar className="h-24 w-24 border-4 border-background">
 30 │           <AvatarImage src={user.photoURL || ""} alt={user.displayName} />
 31 │           <AvatarFallback className="text-2xl">{user.displayName?.substring(0, 2) || "??"}</AvatarFallback>
 32 │         </Avatar>
 33 │         <h3 className="text-xl font-bold mt-4">{user.displayName}</h3>
 34 │ 
 35 │         <div className="flex gap-2 mt-2">
 36 │           <Badge variant="outline" className="bg-blue-500/10 text-blue-500 hover:bg-blue-500/20">
 37 │             {user.nativeLanguage}
 38 │           </Badge>
 39 │           <Badge variant="outline" className="bg-green-500/10 text-green-500 hover:bg-green-500/20">
 40 │             {user.learningLanguage}
 41 │           </Badge>
 42 │         </div>
 43 │ 
 44 │         <p className="text-muted-foreground mt-3 line-clamp-3">{user.bio || "No bio provided"}</p>
 45 │ 
 46 │         {user.interests && user.interests.length > 0 && (
 47 │           <div className="mt-4">
 48 │             <p className="text-sm font-medium mb-2">Interests</p>
 49 │             <div className="flex flex-wrap gap-1">
 50 │               {user.interests.slice(0, 5).map((interest) => (
 51 │                 <Badge key={interest} variant="secondary" className="text-xs">
 52 │                   {interest}
 53 │                 </Badge>
 54 │               ))}
 55 │               {user.interests.length > 5 && (
 56 │                 <Badge variant="secondary" className="text-xs">
 57 │                   +{user.interests.length - 5} more
 58 │                 </Badge>
 59 │               )}
 60 │             </div>
 61 │           </div>
 62 │         )}
 63 │       </CardContent>
 64 │       <CardFooter className="flex gap-2 p-6 pt-0">
 65 │         <Button className="flex-1" onClick={onStartConversation}>
 66 │           <MessageCircle className="mr-2 h-4 w-4" />
 67 │           Message
 68 │         </Button>
 69 │         <Button variant="outline" className="flex-1">
 70 │           <UserPlus className="mr-2 h-4 w-4" />
 71 │           Connect
 72 │         </Button>
 73 │       </CardFooter>
 74 │     </Card>
 75 │   )
 76 │ }
 77 │ 
 78 │ "use client"
 79 │ 
 80 │ import { useState } from "react"
 81 │ import { Card, CardContent, CardFooter } from "@/components/ui/card"
    ·          ──┬─
    ·            ╰── `Card` redefined here
 82 │ import { Button } from "@/components/ui/button"
 83 │ import { MessageSquare } from "lucide-react"
 84 │ import Link from "next/link"
    ╰────

  × the name `CardContent` is defined multiple times
    ╭─[/home/runner/workspace/components/community/user-card.tsx:1:1]
  1 │ "use client"
  2 │ 
  3 │ import { Card, CardContent, CardFooter } from "@/components/ui/card"
    ·                ─────┬─────
    ·                     ╰── previous definition of `CardContent` here
  4 │ import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
  5 │ import { Badge } from "@/components/ui/badge"
  6 │ import { Button } from "@/components/ui/button"
  7 │ import { MessageCircle, UserPlus } from "lucide-react"
  8 │ 
  9 │ type UserData = {
 10 │   uid: string
 11 │   displayName: string
 12 │   photoURL: string
 13 │   nativeLanguage: string
 14 │   learningLanguage: string
 15 │   interests: string[]
 16 │   bio: string
 17 │ }
 18 │ 
 19 │ interface UserCardProps {
 20 │   user: UserData
 21 │   onStartConversation: () => void
 22 │ }
 23 │ 
 24 │ export function UserCard({ user, onStartConversation }: UserCardProps) {
 25 │   return (
 26 │     <Card className="overflow-hidden transition-all hover:shadow-md">
 27 │       <div className="h-24 bg-gradient-to-r from-primary to-purple-400"></div>
 28 │       <CardContent className="p-6 pt-0 -mt-12">
 29 │         <Avatar className="h-24 w-24 border-4 border-background">
 30 │           <AvatarImage src={user.photoURL || ""} alt={user.displayName} />
 31 │           <AvatarFallback className="text-2xl">{user.displayName?.substring(0, 2) || "??"}</AvatarFallback>
 32 │         </Avatar>
 33 │         <h3 className="text-xl font-bold mt-4">{user.displayName}</h3>
 34 │ 
 35 │         <div className="flex gap-2 mt-2">
 36 │           <Badge variant="outline" className="bg-blue-500/10 text-blue-500 hover:bg-blue-500/20">
 37 │             {user.nativeLanguage}
 38 │           </Badge>
 39 │           <Badge variant="outline" className="bg-green-500/10 text-green-500 hover:bg-green-500/20">
 40 │             {user.learningLanguage}
 41 │           </Badge>
 42 │         </div>
 43 │ 
 44 │         <p className="text-muted-foreground mt-3 line-clamp-3">{user.bio || "No bio provided"}</p>
 45 │ 
 46 │         {user.interests && user.interests.length > 0 && (
 47 │           <div className="mt-4">
 48 │             <p className="text-sm font-medium mb-2">Interests</p>
 49 │             <div className="flex flex-wrap gap-1">
 50 │               {user.interests.slice(0, 5).map((interest) => (
 51 │                 <Badge key={interest} variant="secondary" className="text-xs">
 52 │                   {interest}
 53 │                 </Badge>
 54 │               ))}
 55 │               {user.interests.length > 5 && (
 56 │                 <Badge variant="secondary" className="text-xs">
 57 │                   +{user.interests.length - 5} more
 58 │                 </Badge>
 59 │               )}
 60 │             </div>
 61 │           </div>
 62 │         )}
 63 │       </CardContent>
 64 │       <CardFooter className="flex gap-2 p-6 pt-0">
 65 │         <Button className="flex-1" onClick={onStartConversation}>
 66 │           <MessageCircle className="mr-2 h-4 w-4" />
 67 │           Message
 68 │         </Button>
 69 │         <Button variant="outline" className="flex-1">
 70 │           <UserPlus className="mr-2 h-4 w-4" />
 71 │           Connect
 72 │         </Button>
 73 │       </CardFooter>
 74 │     </Card>
 75 │   )
 76 │ }
 77 │ 
 78 │ "use client"
 79 │ 
 80 │ import { useState } from "react"
 81 │ import { Card, CardContent, CardFooter } from "@/components/ui/card"
    ·                ─────┬─────
    ·                     ╰── `CardContent` redefined here
 82 │ import { Button } from "@/components/ui/button"
 83 │ import { MessageSquare } from "lucide-react"
 84 │ import Link from "next/link"
    ╰────

  × the name `CardFooter` is defined multiple times
    ╭─[/home/runner/workspace/components/community/user-card.tsx:1:1]
  1 │ "use client"
  2 │ 
  3 │ import { Card, CardContent, CardFooter } from "@/components/ui/card"
    ·                             ─────┬────
    ·                                  ╰── previous definition of `CardFooter` here
  4 │ import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
  5 │ import { Badge } from "@/components/ui/badge"
  6 │ import { Button } from "@/components/ui/button"
  7 │ import { MessageCircle, UserPlus } from "lucide-react"
  8 │ 
  9 │ type UserData = {
 10 │   uid: string
 11 │   displayName: string
 12 │   photoURL: string
 13 │   nativeLanguage: string
 14 │   learningLanguage: string
 15 │   interests: string[]
 16 │   bio: string
 17 │ }
 18 │ 
 19 │ interface UserCardProps {
 20 │   user: UserData
 21 │   onStartConversation: () => void
 22 │ }
 23 │ 
 24 │ export function UserCard({ user, onStartConversation }: UserCardProps) {
 25 │   return (
 26 │     <Card className="overflow-hidden transition-all hover:shadow-md">
 27 │       <div className="h-24 bg-gradient-to-r from-primary to-purple-400"></div>
 28 │       <CardContent className="p-6 pt-0 -mt-12">
 29 │         <Avatar className="h-24 w-24 border-4 border-background">
 30 │           <AvatarImage src={user.photoURL || ""} alt={user.displayName} />
 31 │           <AvatarFallback className="text-2xl">{user.displayName?.substring(0, 2) || "??"}</AvatarFallback>
 32 │         </Avatar>
 33 │         <h3 className="text-xl font-bold mt-4">{user.displayName}</h3>
 34 │ 
 35 │         <div className="flex gap-2 mt-2">
 36 │           <Badge variant="outline" className="bg-blue-500/10 text-blue-500 hover:bg-blue-500/20">
 37 │             {user.nativeLanguage}
 38 │           </Badge>
 39 │           <Badge variant="outline" className="bg-green-500/10 text-green-500 hover:bg-green-500/20">
 40 │             {user.learningLanguage}
 41 │           </Badge>
 42 │         </div>
 43 │ 
 44 │         <p className="text-muted-foreground mt-3 line-clamp-3">{user.bio || "No bio provided"}</p>
 45 │ 
 46 │         {user.interests && user.interests.length > 0 && (
 47 │           <div className="mt-4">
 48 │             <p className="text-sm font-medium mb-2">Interests</p>
 49 │             <div className="flex flex-wrap gap-1">
 50 │               {user.interests.slice(0, 5).map((interest) => (
 51 │                 <Badge key={interest} variant="secondary" className="text-xs">
 52 │                   {interest}
 53 │                 </Badge>
 54 │               ))}
 55 │               {user.interests.length > 5 && (
 56 │                 <Badge variant="secondary" className="text-xs">
 57 │                   +{user.interests.length - 5} more
 58 │                 </Badge>
 59 │               )}
 60 │             </div>
 61 │           </div>
 62 │         )}
 63 │       </CardContent>
 64 │       <CardFooter className="flex gap-2 p-6 pt-0">
 65 │         <Button className="flex-1" onClick={onStartConversation}>
 66 │           <MessageCircle className="mr-2 h-4 w-4" />
 67 │           Message
 68 │         </Button>
 69 │         <Button variant="outline" className="flex-1">
 70 │           <UserPlus className="mr-2 h-4 w-4" />
 71 │           Connect
 72 │         </Button>
 73 │       </CardFooter>
 74 │     </Card>
 75 │   )
 76 │ }
 77 │ 
 78 │ "use client"
 79 │ 
 80 │ import { useState } from "react"
 81 │ import { Card, CardContent, CardFooter } from "@/components/ui/card"
    ·                             ─────┬────
    ·                                  ╰── `CardFooter` redefined here
 82 │ import { Button } from "@/components/ui/button"
 83 │ import { MessageSquare } from "lucide-react"
 84 │ import Link from "next/link"
    ╰────

  × the name `Button` is defined multiple times
    ╭─[/home/runner/workspace/components/community/user-card.tsx:3:1]
  3 │ import { Card, CardContent, CardFooter } from "@/components/ui/card"
  4 │ import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
  5 │ import { Badge } from "@/components/ui/badge"
  6 │ import { Button } from "@/components/ui/button"
    ·          ───┬──
    ·             ╰── previous definition of `Button` here
  7 │ import { MessageCircle, UserPlus } from "lucide-react"
  8 │ 
  9 │ type UserData = {
 10 │   uid: string
 11 │   displayName: string
 12 │   photoURL: string
 13 │   nativeLanguage: string
 14 │   learningLanguage: string
 15 │   interests: string[]
 16 │   bio: string
 17 │ }
 18 │ 
 19 │ interface UserCardProps {
 20 │   user: UserData
 21 │   onStartConversation: () => void
 22 │ }
 23 │ 
 24 │ export function UserCard({ user, onStartConversation }: UserCardProps) {
 25 │   return (
 26 │     <Card className="overflow-hidden transition-all hover:shadow-md">
 27 │       <div className="h-24 bg-gradient-to-r from-primary to-purple-400"></div>
 28 │       <CardContent className="p-6 pt-0 -mt-12">
 29 │         <Avatar className="h-24 w-24 border-4 border-background">
 30 │           <AvatarImage src={user.photoURL || ""} alt={user.displayName} />
 31 │           <AvatarFallback className="text-2xl">{user.displayName?.substring(0, 2) || "??"}</AvatarFallback>
 32 │         </Avatar>
 33 │         <h3 className="text-xl font-bold mt-4">{user.displayName}</h3>
 34 │ 
 35 │         <div className="flex gap-2 mt-2">
 36 │           <Badge variant="outline" className="bg-blue-500/10 text-blue-500 hover:bg-blue-500/20">
 37 │             {user.nativeLanguage}
 38 │           </Badge>
 39 │           <Badge variant="outline" className="bg-green-500/10 text-green-500 hover:bg-green-500/20">
 40 │             {user.learningLanguage}
 41 │           </Badge>
 42 │         </div>
 43 │ 
 44 │         <p className="text-muted-foreground mt-3 line-clamp-3">{user.bio || "No bio provided"}</p>
 45 │ 
 46 │         {user.interests && user.interests.length > 0 && (
 47 │           <div className="mt-4">
 48 │             <p className="text-sm font-medium mb-2">Interests</p>
 49 │             <div className="flex flex-wrap gap-1">
 50 │               {user.interests.slice(0, 5).map((interest) => (
 51 │                 <Badge key={interest} variant="secondary" className="text-xs">
 52 │                   {interest}
 53 │                 </Badge>
 54 │               ))}
 55 │               {user.interests.length > 5 && (
 56 │                 <Badge variant="secondary" className="text-xs">
 57 │                   +{user.interests.length - 5} more
 58 │                 </Badge>
 59 │               )}
 60 │             </div>
 61 │           </div>
 62 │         )}
 63 │       </CardContent>
 64 │       <CardFooter className="flex gap-2 p-6 pt-0">
 65 │         <Button className="flex-1" onClick={onStartConversation}>
 66 │           <MessageCircle className="mr-2 h-4 w-4" />
 67 │           Message
 68 │         </Button>
 69 │         <Button variant="outline" className="flex-1">
 70 │           <UserPlus className="mr-2 h-4 w-4" />
 71 │           Connect
 72 │         </Button>
 73 │       </CardFooter>
 74 │     </Card>
 75 │   )
 76 │ }
 77 │ 
 78 │ "use client"
 79 │ 
 80 │ import { useState } from "react"
 81 │ import { Card, CardContent, CardFooter } from "@/components/ui/card"
 82 │ import { Button } from "@/components/ui/button"
    ·          ───┬──
    ·             ╰── `Button` redefined here
 83 │ import { MessageSquare } from "lucide-react"
 84 │ import Link from "next/link"
    ╰────

  × the name `UserCard` is defined multiple times
     ╭─[/home/runner/workspace/components/community/user-card.tsx:21:1]
  21 │   onStartConversation: () => void
  22 │ }
  23 │ 
  24 │ export function UserCard({ user, onStartConversation }: UserCardProps) {
     ·                 ────┬───
     ·                     ╰── previous definition of `UserCard` here
  25 │   return (
  26 │     <Card className="overflow-hidden transition-all hover:shadow-md">
  27 │       <div className="h-24 bg-gradient-to-r from-primary to-purple-400"></div>
  28 │       <CardContent className="p-6 pt-0 -mt-12">
  29 │         <Avatar className="h-24 w-24 border-4 border-background">
  30 │           <AvatarImage src={user.photoURL || ""} alt={user.displayName} />
  31 │           <AvatarFallback className="text-2xl">{user.displayName?.substring(0, 2) || "??"}</AvatarFallback>
  32 │         </Avatar>
  33 │         <h3 className="text-xl font-bold mt-4">{user.displayName}</h3>
  34 │ 
  35 │         <div className="flex gap-2 mt-2">
  36 │           <Badge variant="outline" className="bg-blue-500/10 text-blue-500 hover:bg-blue-500/20">
  37 │             {user.nativeLanguage}
  38 │           </Badge>
  39 │           <Badge variant="outline" className="bg-green-500/10 text-green-500 hover:bg-green-500/20">
  40 │             {user.learningLanguage}
  41 │           </Badge>
  42 │         </div>
  43 │ 
  44 │         <p className="text-muted-foreground mt-3 line-clamp-3">{user.bio || "No bio provided"}</p>
  45 │ 
  46 │         {user.interests && user.interests.length > 0 && (
  47 │           <div className="mt-4">
  48 │             <p className="text-sm font-medium mb-2">Interests</p>
  49 │             <div className="flex flex-wrap gap-1">
  50 │               {user.interests.slice(0, 5).map((interest) => (
  51 │                 <Badge key={interest} variant="secondary" className="text-xs">
  52 │                   {interest}
  53 │                 </Badge>
  54 │               ))}
  55 │               {user.interests.length > 5 && (
  56 │                 <Badge variant="secondary" className="text-xs">
  57 │                   +{user.interests.length - 5} more
  58 │                 </Badge>
  59 │               )}
  60 │             </div>
  61 │           </div>
  62 │         )}
  63 │       </CardContent>
  64 │       <CardFooter className="flex gap-2 p-6 pt-0">
  65 │         <Button className="flex-1" onClick={onStartConversation}>
  66 │           <MessageCircle className="mr-2 h-4 w-4" />
  67 │           Message
  68 │         </Button>
  69 │         <Button variant="outline" className="flex-1">
  70 │           <UserPlus className="mr-2 h-4 w-4" />
  71 │           Connect
  72 │         </Button>
  73 │       </CardFooter>
  74 │     </Card>
  75 │   )
  76 │ }
  77 │ 
  78 │ "use client"
  79 │ 
  80 │ import { useState } from "react"
  81 │ import { Card, CardContent, CardFooter } from "@/components/ui/card"
  82 │ import { Button } from "@/components/ui/button"
  83 │ import { MessageSquare } from "lucide-react"
  84 │ import Link from "next/link"
  85 │ 
  86 │ type UserData = {
  87 │   uid: string
  88 │   displayName: string
  89 │   photoURL: string
  90 │   nativeLanguage: string
  91 │   learningLanguage: string
  92 │   interests: string[]
  93 │   bio: string
  94 │ }
  95 │ 
  96 │ interface UserCardProps {
  97 │   user: UserData
  98 │ }
  99 │ 
 100 │ export function UserCard({ user }: UserCardProps) {
     ·                 ────┬───
     ·                     ╰── `UserCard` redefined here
 101 │   return (
 102 │     <Card className="h-full flex flex-col">
 103 │       <CardContent className="pt-6 flex-1">
     ╰────

  × The "use client" directive must be placed before other expressions. Move it to the top of the file to resolve this issue.
    ╭─[/home/runner/workspace/components/community/user-card.tsx:75:1]
 75 │   )
 76 │ }
 77 │ 
 78 │ "use client"
    · ────────────
 79 │ 
 80 │ import { useState } from "react"
 81 │ import { Card, CardContent, CardFooter } from "@/components/ui/card"